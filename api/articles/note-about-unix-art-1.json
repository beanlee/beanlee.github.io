{"title":"UNIX 编程艺术 读书笔记 1","slug":"note-about-unix-art-1","date":"2020-11-17T11:02:20.000Z","updated":"2020-11-18T13:22:42.254Z","comments":true,"path":"api/articles/note-about-unix-art-1.json","excerpt":"以下规则很受用，不分语言，甚至有一些规则可以作为日常做事的原则，日后逐条对应写一些个人的理解。有关 UNIX 编程的规则（摘自原文）：","covers":null,"content":"<!-- ## 《UNIX 编程艺术》读书笔记 1 -->\n<p>以下规则很受用，不分语言，甚至有一些规则可以作为日常做事的原则，日后逐条对应写一些个人的理解。</p>\n<p>有关 UNIX 编程的规则（摘自原文）：</p>\n<a id=\"more\"></a>\n<blockquote>\n<ol>\n<li>模块原则：使用简洁的接口拼合简单的部件。</li>\n<li>清晰原则：清晰胜于机巧。</li>\n<li>组合原则：设计时考虑拼接组合。</li>\n<li>分离原则：策略同机制分离，接口同引擎分离。</li>\n<li>简洁原则：设计要简洁，复杂度能低则低。</li>\n<li>吝啬原则：除非确无它法，不要编写庞大的程序。</li>\n<li>透明性原则：设计要可见，以便审查和调试。</li>\n<li>健壮原则：健壮源于透明与简洁。</li>\n<li>表示原则：把知识叠入数据以求逻辑质朴而健壮。</li>\n<li>通俗原则：接口设计避免标新立异。</li>\n<li>缄默原则：如果一个程序没什么好说的，就沉默。</li>\n<li>补救原则：出现异常时，马上退出并给出足够错误信息。</li>\n<li>经济原则：宁花机器一分，不花程序员一秒。</li>\n<li>生成原则：避免手工 hack，尽量编写程序去生成程序。</li>\n<li>优化原则：雕琢前先要有原型，跑之前先学会走。</li>\n<li>多样原则：决不相信所谓“不二法门”的断言。</li>\n<li>扩展原则：设计着眼未来，未来总比预想来得快。</li>\n</ol>\n</blockquote>\n","more":"<blockquote>\n<ol>\n<li>模块原则：使用简洁的接口拼合简单的部件。</li>\n<li>清晰原则：清晰胜于机巧。</li>\n<li>组合原则：设计时考虑拼接组合。</li>\n<li>分离原则：策略同机制分离，接口同引擎分离。</li>\n<li>简洁原则：设计要简洁，复杂度能低则低。</li>\n<li>吝啬原则：除非确无它法，不要编写庞大的程序。</li>\n<li>透明性原则：设计要可见，以便审查和调试。</li>\n<li>健壮原则：健壮源于透明与简洁。</li>\n<li>表示原则：把知识叠入数据以求逻辑质朴而健壮。</li>\n<li>通俗原则：接口设计避免标新立异。</li>\n<li>缄默原则：如果一个程序没什么好说的，就沉默。</li>\n<li>补救原则：出现异常时，马上退出并给出足够错误信息。</li>\n<li>经济原则：宁花机器一分，不花程序员一秒。</li>\n<li>生成原则：避免手工 hack，尽量编写程序去生成程序。</li>\n<li>优化原则：雕琢前先要有原型，跑之前先学会走。</li>\n<li>多样原则：决不相信所谓“不二法门”的断言。</li>\n<li>扩展原则：设计着眼未来，未来总比预想来得快。</li>\n</ol>\n</blockquote>","categories":[],"tags":[{"name":"读书笔记","path":"api/tags/读书笔记.json"}]}