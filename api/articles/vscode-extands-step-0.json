{"title":"VSCode 插件开发急速入门","slug":"vscode-extands-step-0","date":"2018-06-13T07:41:48.000Z","updated":"2018-06-16T03:26:44.350Z","comments":true,"path":"api/articles/vscode-extands-step-0.json","excerpt":"VSCode (全称：Vistual Studio Code) 由 Microsoft 出品，其启动快速、稳定性好、占用内存较小、插件越来越丰富、社区活跃等特点，目前是个人和团队中很多小伙伴的主力代码编辑器。废话不多说，直奔主题，本文你将了解简单的 vscode 的插件开发入门，感兴趣的同学可以继续阅读。","covers":["https://img30.360buyimg.com/uba/jfs/t20848/320/1132999703/64245/a47741fc/5b20d75eN83303d8b.png","https://img10.360buyimg.com/uba/jfs/t21937/257/1227805321/92154/d99f4ec1/5b2231f3N66d25b0d.gif","https://img20.360buyimg.com/uba/jfs/t23665/363/2293286/276483/f4555655/5b224074Ne999cf65.png","https://img14.360buyimg.com/uba/jfs/t21880/250/1201945807/26913/9c7e96d9/5b2240beNfc0ae8a5.png","https://img14.360buyimg.com/uba/jfs/t23941/205/2220837/339379/fbe1b654/5b224350Nc2e1c2d4.png"],"content":"<p>VSCode (全称：Vistual Studio Code) 由 Microsoft 出品，其启动快速、稳定性好、占用内存较小、插件越来越丰富、社区活跃等特点，目前是个人和团队中很多小伙伴的主力代码编辑器。</p>\n<p>废话不多说，直奔主题，本文你将了解简单的 vscode 的插件开发入门，感兴趣的同学可以继续阅读。</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>以下文中提到的“插件”均为 Vistual Studio Code 的插件，Vistual Studio Code 也简称 VSCode</p>\n</blockquote>\n<h2 id=\"Start\"><a href=\"#Start\" class=\"headerlink\" title=\"Start\"></a>Start</h2><h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><ul>\n<li>nodejs <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">link</a> 建议使用 LTS 版本，截止发文 v8.11.3</li>\n<li>npm <a href=\"https://www.npmjs.com/package/npm\" target=\"_blank\" rel=\"noopener\">link</a> 建议最新版本，截止发文 v6.1.0</li>\n<li>yeoman <a href=\"http://yeoman.io/\" target=\"_blank\" rel=\"noopener\">link</a> <code>npm install -g yo</code></li>\n<li>generator-code <a href=\"https://github.com/Microsoft/vscode-generator-code\" target=\"_blank\" rel=\"noopener\">link</a> <code>npm install -g generator-code</code></li>\n</ul>\n<p>做好上面的环境准备，正式进入开发，下面我会以自己刚做好的一个查询北京地区空气质量为例子，继续介绍（安心してください，代码很少，很好入门）。</p>\n<h3 id=\"数据准备\"><a href=\"#数据准备\" class=\"headerlink\" title=\"数据准备\"></a>数据准备</h3><p>下面我们补充一下我们的例子的功能，首先明确我们要获取城市的 AQI（空气质量）信息，网络上可以搜索到直接调用 API 或者 SDK，笔者目前使用的京东云的一个产品京东万象中的一个天气免费 API，<a href=\"https://wx.jdcloud.com/\" target=\"_blank\" rel=\"noopener\">链接见此</a> 注册名实名认证后可以获得一个调用应用的 KEY 既可以获取天气数据了。更多其他方面的 API 读者可以自行探索。</p>\n<p>笔者使用的 API 是 <a href=\"https://wx.jdcloud.com/market/datas/26/10610\" target=\"_blank\" rel=\"noopener\">https://wx.jdcloud.com/market/datas/26/10610</a> 参数 city 支持 中英文名称、ID 和 IP 限制 5000次/天</p>\n<h3 id=\"锦囊\"><a href=\"#锦囊\" class=\"headerlink\" title=\"锦囊\"></a>锦囊</h3><p>已有插件所在目录如下：</p>\n<table>\n<thead>\n<tr>\n<th>os</th>\n<th>path</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>windows</td>\n<td>%USERPROFILE%\\.vscode\\extensions</td>\n</tr>\n<tr>\n<td>macOS</td>\n<td>~/.vscode/extensions</td>\n</tr>\n<tr>\n<td>Linux</td>\n<td>~/.vscode/extensions</td>\n</tr>\n</tbody>\n</table>\n<p>在这个目录下我们可以看到已经安装的所有插件的代码，即使插件是使用 typescript 编写 out 文件夹也可以看到编译后的 javascript 代码，感兴趣的同学可以直接看一看自己平时最常用的插件是如何实现的。</p>\n<h3 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h3><p>执行下面代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yo code</span><br></pre></td></tr></table></figure>\n<p>执行后会提示几个问题，第一个问题我们选择 <code>New Extension (JavaScript)</code>，其他正常填写即可。（可以使用 yo code 来创建插件、主题、代码片段、语言支持、键盘映射、插件包，本文我们只讨论插件，其他暂且放在一边。）</p>\n<p><img src=\"https://img30.360buyimg.com/uba/jfs/t20848/320/1132999703/64245/a47741fc/5b20d75eN83303d8b.png\" alt=\"\"></p>\n<p>填写完成后，会自动创建文件夹并帮助初始化完成文件，我们先看下目录结构。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── CHANGELOG.md <span class=\"comment\">## 修改记录</span></span><br><span class=\"line\">├── README.md <span class=\"comment\">## 插件说明 README</span></span><br><span class=\"line\">├── extension.js <span class=\"comment\">## 入口</span></span><br><span class=\"line\">├── jsconfig.json <span class=\"comment\">## JavaScript 配置</span></span><br><span class=\"line\">├── node_modules <span class=\"comment\">## 依赖</span></span><br><span class=\"line\">├── package-lock.json</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── <span class=\"built_in\">test</span></span><br><span class=\"line\">└── vsc-extension-quickstart.md</span><br></pre></td></tr></table></figure>\n<p>熟悉的项目文件结构，直接查看 <code>vsc-extension-quickstart.md</code> 这个文档，文中提到 <code>package.json</code> 声明当前插件和命令的配置文件，用来注册命令等配置；<code>extension.js</code> 是主入口文件，插件的具体实现代码可以放在这里；</p>\n<p>简单了解一下两个重要文件：</p>\n<figure class=\"highlight\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    \"name\": \"city-aqi\", // 插件名称</span><br><span class=\"line\">    \"displayName\": \"city-aqi\", // 插件显示名称</span><br><span class=\"line\">    \"description\": \"Air Quaility Index of City\", // 插件描述</span><br><span class=\"line\">    \"version\": \"0.0.1\",</span><br><span class=\"line\">    \"publisher\": \"beanleecode\", // 插件发布者</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    \"activationEvents\": [ // 活动事件列表</span><br><span class=\"line\">        <span class=\"string\">\"onCommand:extension.sayHello\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    \"main\": \"./extension\", // 入口文件</span><br><span class=\"line\">    \"contributes\": &#123;</span><br><span class=\"line\">        \"commands\": [ // 对应命令列表</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"extension.sayHello\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Hello World\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><figcaption><span>extension.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// The module 'vscode' contains the VS Code extensibility API</span></span><br><span class=\"line\"><span class=\"comment\">// Import the module and reference it with the alias vscode in your code below</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> vscode = <span class=\"built_in\">require</span>(<span class=\"string\">'vscode'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// this method is called when your extension is activated</span></span><br><span class=\"line\"><span class=\"comment\">// your extension is activated the very first time the command is executed</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activate</span>(<span class=\"params\">context</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Use the console to output diagnostic information (console.log) and errors (console.error)</span></span><br><span class=\"line\">  <span class=\"comment\">// This line of code will only be executed once when your extension is activated</span></span><br><span class=\"line\">  <span class=\"comment\">// 这里的代码将只会在插件激活时执行一次</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Congratulations, your extension \"city-aqi\" is now active!'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// The command has been defined in the package.json file</span></span><br><span class=\"line\">  <span class=\"comment\">// 定义在 package.json 中的命令在这里定义</span></span><br><span class=\"line\">  <span class=\"comment\">// Now provide the implementation of the command with registerCommand</span></span><br><span class=\"line\">  <span class=\"comment\">// 提供 registerCommand 来注册实现代码</span></span><br><span class=\"line\">  <span class=\"comment\">// The commandId parameter must match the command field in package.json</span></span><br><span class=\"line\">  <span class=\"comment\">// commandId 参数必须与 package.json 匹配</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> disposable = vscode.commands.registerCommand(<span class=\"string\">'extension.sayHello'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// The code you place here will be executed every time your command is executed</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里的代码每次执行 这个命令 的时候都会被执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Display a message box to the user</span></span><br><span class=\"line\">    <span class=\"comment\">// 显示信息框</span></span><br><span class=\"line\">    vscode.window.showInformationMessage(<span class=\"string\">'Hello World!'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  context.subscriptions.push(disposable);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.activate = activate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// this method is called when your extension is deactivated</span></span><br><span class=\"line\"><span class=\"comment\">// 插件被停用的时候被调用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deactivate</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.deactivate = deactivate;</span><br></pre></td></tr></table></figure>\n<p>下面我们直接用 VSCode 打开这个项目的根目录，打开 <code>extension.js</code> 按下键盘 <code>F5</code> 或启动调试，接下来就可以看到，已经启动一个新的窗口，我们按下 <code>command + shift + p</code> 或 <code>command + p 再输入 &gt;</code> 即可调用插件，在 package.json 中已经定义过 commands 我们直接输入 <code>Hello World</code> 直接启动插件，此时可以看到 Hello World 的通知框，就可以调试代码了。</p>\n<p>OK，下面我们来进一步实现我们的功能，调取天气 API 数据，展示。</p>\n<figure class=\"highlight javascript\"><figcaption><span>extension.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> vscode = <span class=\"built_in\">require</span>(<span class=\"string\">'vscode'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> axios = <span class=\"built_in\">require</span>(<span class=\"string\">'axios'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activate</span>(<span class=\"params\">context</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> cityAqi = vscode.commands.registerCommand(<span class=\"string\">'extension.sayCityAqi'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> options = &#123;</span><br><span class=\"line\">      ignoreFocusOut: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      password: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      prompt: <span class=\"string\">\"Please type your city (eg.beijing or 北京)\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    vscode.window.showInputBox(options).then(<span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (value === <span class=\"literal\">undefined</span> || value.trim() === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">        vscode.window.showInformationMessage(<span class=\"string\">'Please type your city.'</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> cityName = value.trim();</span><br><span class=\"line\">          <span class=\"comment\">// appkey=xxxxxxxx 替换成事先申请好的 key</span></span><br><span class=\"line\">          axios.get(<span class=\"string\">`https://way.jd.com/he/freeweather?city=<span class=\"subst\">$&#123;cityName&#125;</span>&amp;appkey=xxxxxxxx`</span>)</span><br><span class=\"line\">            .then(<span class=\"function\">(<span class=\"params\">rep</span>) =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span>(rep.data.code !== <span class=\"string\">'10000'</span>) &#123;</span><br><span class=\"line\">                vscode.window.showInformationMessage(<span class=\"string\">'Sorry, Please try again.'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">const</span> weatherData = rep.data.result.HeWeather5[<span class=\"number\">0</span>]</span><br><span class=\"line\">              <span class=\"keyword\">if</span>(weatherData.status !== <span class=\"string\">'ok'</span>) &#123;</span><br><span class=\"line\">                vscode.window.showInformationMessage(<span class=\"string\">`Sorry, <span class=\"subst\">$&#123;weatherData.status&#125;</span>`</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              vscode.window.showInformationMessage(<span class=\"string\">`<span class=\"subst\">$&#123;weatherData.basic.city&#125;</span> 's AQI =&gt; PM25: <span class=\"subst\">$&#123;weatherData.aqi.city.pm25&#125;</span>, PM10: <span class=\"subst\">$&#123;weatherData.aqi.city.pm10&#125;</span> <span class=\"subst\">$&#123;weatherData.aqi.city.qlty&#125;</span>`</span>);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  context.subscriptions.push(cityAqi);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.activate = activate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// this method is called when your extension is deactivated</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deactivate</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.deactivate = deactivate;</span><br></pre></td></tr></table></figure>\n<p>Tadaaa，简单的功能就完成了！:P</p>\n<p><img src=\"https://img10.360buyimg.com/uba/jfs/t21937/257/1227805321/92154/d99f4ec1/5b2231f3N66d25b0d.gif\" alt=\"\"></p>\n<p>代码中用到了两个 vscode windows 的 api，<em>showInputBox</em> 和 <em>showInformationMessage</em> 更多 API 详见<a href=\"https://code.visualstudio.com/docs/extensionAPI/vscode-api\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n<p><img src=\"https://img20.360buyimg.com/uba/jfs/t23665/363/2293286/276483/f4555655/5b224074Ne999cf65.png\" alt=\"\"></p>\n<p>可以看到 API 包含了很多信息，所以可以做的事还可以很多 :)</p>\n<h3 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g vsce</span><br></pre></td></tr></table></figure>\n<p>发布前我们可以把开发好的插件打包成 <code>.vsix</code> 文件，提供给身边的小伙伴试用一下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vsce package</span><br></pre></td></tr></table></figure>\n<p><code>city-aqi-0.0.1.vsix</code> 就打包完成了，在插件面板上选择 从 VSIX 安装 或命令行 <a href=\"https://code.visualstudio.com/docs/editor/extension-gallery#_install-from-a-vsix\" target=\"_blank\" rel=\"noopener\">具体详见文档</a> 安装完成后重新加载 VSCode 就可以使用了。</p>\n<blockquote>\n<p>过程中可能会提示你先修改 README.md 文件才能打包，简单描述功能即可。</p>\n</blockquote>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p>详细完善过 README.md 和 CHANGELOG.md 并且删除了一些冗余的文件，你就可以将插件发布到微软的插件市场 Extension Marketplace 供他人下载使用了。</p>\n<p>在发布插件之前，首先，获取 token，登录 <a href=\"https://docs.microsoft.com/vsts/accounts/create-account-msa-or-work-student\" target=\"_blank\" rel=\"noopener\">Visual Studio Team Services</a> 注册并登录账户，在 Security 中找到 Personal access tokens 新建一个 token。回到命令行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vsce create-publisher xxxx</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img14.360buyimg.com/uba/jfs/t21880/250/1201945807/26913/9c7e96d9/5b2240beNfc0ae8a5.png\" alt=\"\"></p>\n<blockquote>\n<p>完成后不需要重新 login ，因为 vsce 已经帮你记录当前的 publisher。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vsce publish</span><br><span class=\"line\">Publishing city-aqi@0.0.1...</span><br><span class=\"line\">Successfully published city-aqi@0.0.1!</span><br></pre></td></tr></table></figure>\n<p>ALL Done 🎉 </p>\n<p><img src=\"https://img14.360buyimg.com/uba/jfs/t23941/205/2220837/339379/fbe1b654/5b224350Nc2e1c2d4.png\" alt=\"\"></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://code.visualstudio.com/docs/extensions/overview\" target=\"_blank\" rel=\"noopener\">官网文档 https://code.visualstudio.com/docs/extensions/overview</a></li>\n<li><a href=\"https://code.visualstudio.com/docs/extensionAPI/vscode-api\" target=\"_blank\" rel=\"noopener\">vscode-api https://code.visualstudio.com/docs/extensionAPI/vscode-api</a></li>\n</ul>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>笔者几年前一直是 <code>Sublime Text</code> 的使用者，修改 jsp、vm、sql等等文本文件，后来出现了 <code>Atom</code> 社区也相当活跃，用户同样很多，笔者也曾试用过一段时间。</p>\n<p><strong>合适的才是最好的</strong> 近两年 VSCode 一直是我的主力开发编辑器，它也有缺点，但是它在不断精进和完善，大厂维护更新频率也很快。</p>\n<p>很多大牛们喜爱的 <code>Vim</code> 和 <code>Emcas</code> 笔者没有用过，甚至连尝试都没有，可能是被过于灵活的配置<strong>吓到了</strong>…</p>\n<p>PS，最近知道一个词<strong>宜家理论</strong>，套在上面几个工具上面，应该都适用，没有最好的只有最合适自己的。现在机器上配置的 vscode 的开发环境，笔者已经不得不使用同步插件来进行备份，以免更换机器时重新配置。</p>\n<p>VSCode 有很多方便的插件，可以帮助我们提高开发效率，以后找机会写一个推荐列表分享出来。</p>\n","more":"<blockquote>\n<p>以下文中提到的“插件”均为 Vistual Studio Code 的插件，Vistual Studio Code 也简称 VSCode</p>\n</blockquote>\n<h2 id=\"Start\"><a href=\"#Start\" class=\"headerlink\" title=\"Start\"></a>Start</h2><h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><ul>\n<li>nodejs <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">link</a> 建议使用 LTS 版本，截止发文 v8.11.3</li>\n<li>npm <a href=\"https://www.npmjs.com/package/npm\" target=\"_blank\" rel=\"noopener\">link</a> 建议最新版本，截止发文 v6.1.0</li>\n<li>yeoman <a href=\"http://yeoman.io/\" target=\"_blank\" rel=\"noopener\">link</a> <code>npm install -g yo</code></li>\n<li>generator-code <a href=\"https://github.com/Microsoft/vscode-generator-code\" target=\"_blank\" rel=\"noopener\">link</a> <code>npm install -g generator-code</code></li>\n</ul>\n<p>做好上面的环境准备，正式进入开发，下面我会以自己刚做好的一个查询北京地区空气质量为例子，继续介绍（安心してください，代码很少，很好入门）。</p>\n<h3 id=\"数据准备\"><a href=\"#数据准备\" class=\"headerlink\" title=\"数据准备\"></a>数据准备</h3><p>下面我们补充一下我们的例子的功能，首先明确我们要获取城市的 AQI（空气质量）信息，网络上可以搜索到直接调用 API 或者 SDK，笔者目前使用的京东云的一个产品京东万象中的一个天气免费 API，<a href=\"https://wx.jdcloud.com/\" target=\"_blank\" rel=\"noopener\">链接见此</a> 注册名实名认证后可以获得一个调用应用的 KEY 既可以获取天气数据了。更多其他方面的 API 读者可以自行探索。</p>\n<p>笔者使用的 API 是 <a href=\"https://wx.jdcloud.com/market/datas/26/10610\" target=\"_blank\" rel=\"noopener\">https://wx.jdcloud.com/market/datas/26/10610</a> 参数 city 支持 中英文名称、ID 和 IP 限制 5000次/天</p>\n<h3 id=\"锦囊\"><a href=\"#锦囊\" class=\"headerlink\" title=\"锦囊\"></a>锦囊</h3><p>已有插件所在目录如下：</p>\n<table>\n<thead>\n<tr>\n<th>os</th>\n<th>path</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>windows</td>\n<td>%USERPROFILE%\\.vscode\\extensions</td>\n</tr>\n<tr>\n<td>macOS</td>\n<td>~/.vscode/extensions</td>\n</tr>\n<tr>\n<td>Linux</td>\n<td>~/.vscode/extensions</td>\n</tr>\n</tbody>\n</table>\n<p>在这个目录下我们可以看到已经安装的所有插件的代码，即使插件是使用 typescript 编写 out 文件夹也可以看到编译后的 javascript 代码，感兴趣的同学可以直接看一看自己平时最常用的插件是如何实现的。</p>\n<h3 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h3><p>执行下面代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yo code</span><br></pre></td></tr></table></figure>\n<p>执行后会提示几个问题，第一个问题我们选择 <code>New Extension (JavaScript)</code>，其他正常填写即可。（可以使用 yo code 来创建插件、主题、代码片段、语言支持、键盘映射、插件包，本文我们只讨论插件，其他暂且放在一边。）</p>\n<p><img src=\"https://img30.360buyimg.com/uba/jfs/t20848/320/1132999703/64245/a47741fc/5b20d75eN83303d8b.png\" alt=\"\"></p>\n<p>填写完成后，会自动创建文件夹并帮助初始化完成文件，我们先看下目录结构。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── CHANGELOG.md <span class=\"comment\">## 修改记录</span></span><br><span class=\"line\">├── README.md <span class=\"comment\">## 插件说明 README</span></span><br><span class=\"line\">├── extension.js <span class=\"comment\">## 入口</span></span><br><span class=\"line\">├── jsconfig.json <span class=\"comment\">## JavaScript 配置</span></span><br><span class=\"line\">├── node_modules <span class=\"comment\">## 依赖</span></span><br><span class=\"line\">├── package-lock.json</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── <span class=\"built_in\">test</span></span><br><span class=\"line\">└── vsc-extension-quickstart.md</span><br></pre></td></tr></table></figure>\n<p>熟悉的项目文件结构，直接查看 <code>vsc-extension-quickstart.md</code> 这个文档，文中提到 <code>package.json</code> 声明当前插件和命令的配置文件，用来注册命令等配置；<code>extension.js</code> 是主入口文件，插件的具体实现代码可以放在这里；</p>\n<p>简单了解一下两个重要文件：</p>\n<figure class=\"highlight\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    \"name\": \"city-aqi\", // 插件名称</span><br><span class=\"line\">    \"displayName\": \"city-aqi\", // 插件显示名称</span><br><span class=\"line\">    \"description\": \"Air Quaility Index of City\", // 插件描述</span><br><span class=\"line\">    \"version\": \"0.0.1\",</span><br><span class=\"line\">    \"publisher\": \"beanleecode\", // 插件发布者</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    \"activationEvents\": [ // 活动事件列表</span><br><span class=\"line\">        <span class=\"string\">\"onCommand:extension.sayHello\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    \"main\": \"./extension\", // 入口文件</span><br><span class=\"line\">    \"contributes\": &#123;</span><br><span class=\"line\">        \"commands\": [ // 对应命令列表</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"extension.sayHello\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Hello World\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><figcaption><span>extension.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// The module 'vscode' contains the VS Code extensibility API</span></span><br><span class=\"line\"><span class=\"comment\">// Import the module and reference it with the alias vscode in your code below</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> vscode = <span class=\"built_in\">require</span>(<span class=\"string\">'vscode'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// this method is called when your extension is activated</span></span><br><span class=\"line\"><span class=\"comment\">// your extension is activated the very first time the command is executed</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activate</span>(<span class=\"params\">context</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Use the console to output diagnostic information (console.log) and errors (console.error)</span></span><br><span class=\"line\">  <span class=\"comment\">// This line of code will only be executed once when your extension is activated</span></span><br><span class=\"line\">  <span class=\"comment\">// 这里的代码将只会在插件激活时执行一次</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Congratulations, your extension \"city-aqi\" is now active!'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// The command has been defined in the package.json file</span></span><br><span class=\"line\">  <span class=\"comment\">// 定义在 package.json 中的命令在这里定义</span></span><br><span class=\"line\">  <span class=\"comment\">// Now provide the implementation of the command with registerCommand</span></span><br><span class=\"line\">  <span class=\"comment\">// 提供 registerCommand 来注册实现代码</span></span><br><span class=\"line\">  <span class=\"comment\">// The commandId parameter must match the command field in package.json</span></span><br><span class=\"line\">  <span class=\"comment\">// commandId 参数必须与 package.json 匹配</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> disposable = vscode.commands.registerCommand(<span class=\"string\">'extension.sayHello'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// The code you place here will be executed every time your command is executed</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里的代码每次执行 这个命令 的时候都会被执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Display a message box to the user</span></span><br><span class=\"line\">    <span class=\"comment\">// 显示信息框</span></span><br><span class=\"line\">    vscode.window.showInformationMessage(<span class=\"string\">'Hello World!'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  context.subscriptions.push(disposable);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.activate = activate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// this method is called when your extension is deactivated</span></span><br><span class=\"line\"><span class=\"comment\">// 插件被停用的时候被调用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deactivate</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.deactivate = deactivate;</span><br></pre></td></tr></table></figure>\n<p>下面我们直接用 VSCode 打开这个项目的根目录，打开 <code>extension.js</code> 按下键盘 <code>F5</code> 或启动调试，接下来就可以看到，已经启动一个新的窗口，我们按下 <code>command + shift + p</code> 或 <code>command + p 再输入 &gt;</code> 即可调用插件，在 package.json 中已经定义过 commands 我们直接输入 <code>Hello World</code> 直接启动插件，此时可以看到 Hello World 的通知框，就可以调试代码了。</p>\n<p>OK，下面我们来进一步实现我们的功能，调取天气 API 数据，展示。</p>\n<figure class=\"highlight javascript\"><figcaption><span>extension.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> vscode = <span class=\"built_in\">require</span>(<span class=\"string\">'vscode'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> axios = <span class=\"built_in\">require</span>(<span class=\"string\">'axios'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activate</span>(<span class=\"params\">context</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> cityAqi = vscode.commands.registerCommand(<span class=\"string\">'extension.sayCityAqi'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> options = &#123;</span><br><span class=\"line\">      ignoreFocusOut: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      password: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      prompt: <span class=\"string\">\"Please type your city (eg.beijing or 北京)\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    vscode.window.showInputBox(options).then(<span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (value === <span class=\"literal\">undefined</span> || value.trim() === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">        vscode.window.showInformationMessage(<span class=\"string\">'Please type your city.'</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> cityName = value.trim();</span><br><span class=\"line\">          <span class=\"comment\">// appkey=xxxxxxxx 替换成事先申请好的 key</span></span><br><span class=\"line\">          axios.get(<span class=\"string\">`https://way.jd.com/he/freeweather?city=<span class=\"subst\">$&#123;cityName&#125;</span>&amp;appkey=xxxxxxxx`</span>)</span><br><span class=\"line\">            .then(<span class=\"function\">(<span class=\"params\">rep</span>) =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span>(rep.data.code !== <span class=\"string\">'10000'</span>) &#123;</span><br><span class=\"line\">                vscode.window.showInformationMessage(<span class=\"string\">'Sorry, Please try again.'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              <span class=\"keyword\">const</span> weatherData = rep.data.result.HeWeather5[<span class=\"number\">0</span>]</span><br><span class=\"line\">              <span class=\"keyword\">if</span>(weatherData.status !== <span class=\"string\">'ok'</span>) &#123;</span><br><span class=\"line\">                vscode.window.showInformationMessage(<span class=\"string\">`Sorry, <span class=\"subst\">$&#123;weatherData.status&#125;</span>`</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              vscode.window.showInformationMessage(<span class=\"string\">`<span class=\"subst\">$&#123;weatherData.basic.city&#125;</span> 's AQI =&gt; PM25: <span class=\"subst\">$&#123;weatherData.aqi.city.pm25&#125;</span>, PM10: <span class=\"subst\">$&#123;weatherData.aqi.city.pm10&#125;</span> <span class=\"subst\">$&#123;weatherData.aqi.city.qlty&#125;</span>`</span>);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  context.subscriptions.push(cityAqi);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.activate = activate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// this method is called when your extension is deactivated</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deactivate</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.deactivate = deactivate;</span><br></pre></td></tr></table></figure>\n<p>Tadaaa，简单的功能就完成了！:P</p>\n<p><img src=\"https://img10.360buyimg.com/uba/jfs/t21937/257/1227805321/92154/d99f4ec1/5b2231f3N66d25b0d.gif\" alt=\"\"></p>\n<p>代码中用到了两个 vscode windows 的 api，<em>showInputBox</em> 和 <em>showInformationMessage</em> 更多 API 详见<a href=\"https://code.visualstudio.com/docs/extensionAPI/vscode-api\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n<p><img src=\"https://img20.360buyimg.com/uba/jfs/t23665/363/2293286/276483/f4555655/5b224074Ne999cf65.png\" alt=\"\"></p>\n<p>可以看到 API 包含了很多信息，所以可以做的事还可以很多 :)</p>\n<h3 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g vsce</span><br></pre></td></tr></table></figure>\n<p>发布前我们可以把开发好的插件打包成 <code>.vsix</code> 文件，提供给身边的小伙伴试用一下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vsce package</span><br></pre></td></tr></table></figure>\n<p><code>city-aqi-0.0.1.vsix</code> 就打包完成了，在插件面板上选择 从 VSIX 安装 或命令行 <a href=\"https://code.visualstudio.com/docs/editor/extension-gallery#_install-from-a-vsix\" target=\"_blank\" rel=\"noopener\">具体详见文档</a> 安装完成后重新加载 VSCode 就可以使用了。</p>\n<blockquote>\n<p>过程中可能会提示你先修改 README.md 文件才能打包，简单描述功能即可。</p>\n</blockquote>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><p>详细完善过 README.md 和 CHANGELOG.md 并且删除了一些冗余的文件，你就可以将插件发布到微软的插件市场 Extension Marketplace 供他人下载使用了。</p>\n<p>在发布插件之前，首先，获取 token，登录 <a href=\"https://docs.microsoft.com/vsts/accounts/create-account-msa-or-work-student\" target=\"_blank\" rel=\"noopener\">Visual Studio Team Services</a> 注册并登录账户，在 Security 中找到 Personal access tokens 新建一个 token。回到命令行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vsce create-publisher xxxx</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img14.360buyimg.com/uba/jfs/t21880/250/1201945807/26913/9c7e96d9/5b2240beNfc0ae8a5.png\" alt=\"\"></p>\n<blockquote>\n<p>完成后不需要重新 login ，因为 vsce 已经帮你记录当前的 publisher。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vsce publish</span><br><span class=\"line\">Publishing city-aqi@0.0.1...</span><br><span class=\"line\">Successfully published city-aqi@0.0.1!</span><br></pre></td></tr></table></figure>\n<p>ALL Done 🎉 </p>\n<p><img src=\"https://img14.360buyimg.com/uba/jfs/t23941/205/2220837/339379/fbe1b654/5b224350Nc2e1c2d4.png\" alt=\"\"></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://code.visualstudio.com/docs/extensions/overview\" target=\"_blank\" rel=\"noopener\">官网文档 https://code.visualstudio.com/docs/extensions/overview</a></li>\n<li><a href=\"https://code.visualstudio.com/docs/extensionAPI/vscode-api\" target=\"_blank\" rel=\"noopener\">vscode-api https://code.visualstudio.com/docs/extensionAPI/vscode-api</a></li>\n</ul>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>笔者几年前一直是 <code>Sublime Text</code> 的使用者，修改 jsp、vm、sql等等文本文件，后来出现了 <code>Atom</code> 社区也相当活跃，用户同样很多，笔者也曾试用过一段时间。</p>\n<p><strong>合适的才是最好的</strong> 近两年 VSCode 一直是我的主力开发编辑器，它也有缺点，但是它在不断精进和完善，大厂维护更新频率也很快。</p>\n<p>很多大牛们喜爱的 <code>Vim</code> 和 <code>Emcas</code> 笔者没有用过，甚至连尝试都没有，可能是被过于灵活的配置<strong>吓到了</strong>…</p>\n<p>PS，最近知道一个词<strong>宜家理论</strong>，套在上面几个工具上面，应该都适用，没有最好的只有最合适自己的。现在机器上配置的 vscode 的开发环境，笔者已经不得不使用同步插件来进行备份，以免更换机器时重新配置。</p>\n<p>VSCode 有很多方便的插件，可以帮助我们提高开发效率，以后找机会写一个推荐列表分享出来。</p>","categories":[],"tags":[{"name":"Tool","path":"api/tags/Tool.json"},{"name":"Front-End","path":"api/tags/Front-End.json"},{"name":"NodeJS","path":"api/tags/NodeJS.json"}]}